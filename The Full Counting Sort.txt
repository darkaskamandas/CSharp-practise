using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the countSort function below.
    static void Main(String[] args)
{
    int n = Convert.ToInt32(Console.ReadLine());
    Dictionary<int, List<string>> map = new Dictionary<int, List<string>>();
    int[] res = new int[100];
    for (int a0 = 0; a0 < n; a0++)
    {
        string[] tokens_x = Console.ReadLine().Split(' ');
        int x = Convert.ToInt32(tokens_x[0]);
        string s = tokens_x[1];
        res[x]++;

        if (a0 < n / 2)
            s = "-";

        if (map.ContainsKey(x))
            map[x].Add(s);
        else
            map.Add(x, new List<string> { s });
    }
    for(int i = 0; i < res.Count(); i++)
        for(int j = 0; j <res[i]; j++)
            Console.Write(map[i][j] + " ");

    Console.ReadLine();

}
}